from sys import getsizeof

"""
1. Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков.
Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько вариантов кода для одной и той же задачи.
Результаты анализа вставьте в виде комментариев к коду.
Также укажите в комментариях версию Python и разрядность вашей ОС.
"""
# Python 3.9.6, Windows 10.0.19043 x64

"""
Домашнее задание 5 к уроку 1:
Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят и сколько между ними находится букв.
"""


def positions_alphabet():
    while True:
        letter1 = input('Введите первую букву латинского алфавита ').lower()
        if letter1.isalpha():
            if ord(letter1) not in range(97, 123):
                print('Заданная буква не в диапазоне латинского алфавита')
            else:
                break
        else:
            print('Некорректный ввод')
    while True:
        letter2 = input('Введите вторую букву латинского алфавита ').lower()
        if letter2.isalpha():
            if ord(letter2) not in range(97, 123):
                print('Заданная буква не в диапазоне латинского алфавита')
            else:
                break
        else:
            print('Некорректный ввод')
    res1 = ord(letter1) - 96
    res2 = ord(letter2) - 96
    print(f'Введённые буквы стоят на {res1} и {res2} местах в алфавите\nМежду ними {res2 - res1 - 1} букв')
    print(f'В данной программе под переменные было выделено'
          f' {getsizeof(letter1) + getsizeof(letter2) + getsizeof(res1) + getsizeof(res2)} байт')


"""
Введите первую букву латинского алфавита a
Введите вторую букву латинского алфавита z
Введённые буквы стоят на 1 и 26 местах в алфавите
Между ними 24 букв
В данной программе под переменные было выделено 156 байт
"""
# В данной программе под переменные каждый раз выделяется приблизительно одно и то же количество памяти,
# Скорее всего, используется статический способ выделения памяти, потому что ожидаемые значения переменных
# определены заранее.

"""
Домашнее задание 8 к уроку 2:
Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
"""


def counting_occurrences():
    sequence = input('Введите через пробел последовательность чисел ').split()
    num = input('Введите цифру ')
    count = 0
    for el in sequence:
        for d in el:
            if d == num:
                count += 1
    return f'В последовательности {sequence} цифра {num} встречается {count} раз(а)\nВ данной программе' \
           f' под переменные было выделено' \
           f' {getsizeof(sequence) + getsizeof(num) + getsizeof(count) + getsizeof(el) + getsizeof(d)} байт'


"""
Введите через пробел последовательность чисел 2132 324 24 1231 5435 231 435 234
Введите цифру 4
В последовательности ['2132', '324', '24', '1231', '5435', '231', '435', '234'] цифра 4 встречается 5 раз(а)
В данной программе под переменные было выделено 332 байт
___________________________________________________________________________________________________________

Введите через пробел последовательность чисел 2342342342 234234234 4353453 46454 223423 64353453 234234523 64453453
Введите цифру 4
В последовательности ['2342342342', '234234234', '4353453', '46454', '223423', '64353453', '234234523', '64453453']
цифра 4 встречается 19 раз(а)
В данной программе под переменные было выделено 337 байт
"""
# В данной программе под переменные каждый раз выделяется разное количество памяти,
# Используется динамический способ выделения памяти, потому что значения переменных
# неопределены заранее. Количество памяти зависит от длины последовательности чисел,
# и от самих чисел этой последовательности.


if __name__ == "__main__":
    positions_alphabet()
    print(f'\n{"*" * 60}')
    print(counting_occurrences())
